datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  id                 String            @id @default(uuid())
  name               String            @unique
  customDomain       String?
  subscriptionPlan   SubscriptionPlan? @relation(fields: [subscriptionPlanId], references: [id])
  subscriptionPlanId String?
  createdAt          DateTime          @default(now())
  users              User[]
  leads              Lead[]
  pipelines          Pipeline[]
  campaigns          Campaign[]
  teams              Team[]
}

model SubscriptionPlan {
  id        String    @id @default(uuid())
  name      String    @unique
  maxUsers  Int
  features  Json?
  price     Float
  createdAt DateTime  @default(now())
  companies Company[]
}

model User {
  id           String    @id @default(uuid())
  empId        String    @unique
  name         String
  email        String?
  password     String
  role         Role
  companyId    String
  company      Company   @relation(fields: [companyId], references: [id])
  teamId       String?
  team         Team?     @relation("TeamMembers", fields: [teamId], references: [id])
  managedTeam  Team?     @relation("TeamManager")
  lastLogin    DateTime?
  onlineStatus Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
}

model Team {
  id        String   @id @default(uuid())
  name      String
  goals     String?
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  managerId String?  @unique
  manager   User?    @relation("TeamManager", fields: [managerId], references: [id])
  users     User[]   @relation("TeamMembers")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Lead {
  id        String   @id @default(uuid())
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  name      String
  email     String?
  phone     String?
  status    String   @default("new")
  createdBy String?
  createdAt DateTime @default(now())
}

model Pipeline {
  id        String   @id @default(uuid())
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  stageName String
  order     Int
  createdAt DateTime @default(now())
}

model Campaign {
  id        String   @id @default(uuid())
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  name      String
  status    String   @default("draft")
  createdAt DateTime @default(now())
}

enum Role {
  superadmin
  admin
  manager
  agent
}
