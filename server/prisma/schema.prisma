generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id                 String            @id @default(uuid())
  name               String            @unique
  createdAt          DateTime          @default(now())
  customDomain       String?
  subscriptionPlanId String?
  campaigns          Campaign[]
  subscriptionPlan   SubscriptionPlan? @relation(fields: [subscriptionPlanId], references: [id])
  leads              Lead[]
  pipelines          Pipeline[]
  users              User[]
}

model SubscriptionPlan {
  id        String    @id @default(uuid())
  name      String    @unique
  maxUsers  Int
  features  Json?
  price     Float
  createdAt DateTime  @default(now())
  companies Company[]
}

model User {
  id        String   @id @default(uuid())
  empId     String   @unique
  name      String
  password  String
  role      Role
  companyId String
  createdAt DateTime @default(now())
  email     String?
  updatedAt DateTime @default(now())
  company   Company  @relation(fields: [companyId], references: [id])
}

model Lead {
  id        String   @id @default(uuid())
  companyId String
  name      String
  email     String?
  phone     String?
  status    String   @default("new")
  createdBy String?
  createdAt DateTime @default(now())
  company   Company  @relation(fields: [companyId], references: [id])
}

model Pipeline {
  id        String   @id @default(uuid())
  companyId String
  stageName String
  order     Int
  createdAt DateTime @default(now())
  company   Company  @relation(fields: [companyId], references: [id])
}

model Campaign {
  id        String   @id @default(uuid())
  companyId String
  name      String
  status    String   @default("draft")
  createdAt DateTime @default(now())
  company   Company  @relation(fields: [companyId], references: [id])
}

enum Role {
  superadmin
  admin
  manager
  agent
}
