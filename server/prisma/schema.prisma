datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  id                 String            @id @default(uuid())
  name               String            @unique
  customDomain       String? // optional custom domain
  subscriptionPlan   SubscriptionPlan? @relation(fields: [subscriptionPlanId], references: [id])
  subscriptionPlanId String?
  createdAt          DateTime          @default(now())
  users              User[]
  leads              Lead[]
  pipelines          Pipeline[]
  campaigns          Campaign[]
}

model SubscriptionPlan {
  id        String   @id @default(uuid())
  name      String   @unique
  maxUsers  Int
  features  Json? // use Json type for storing feature flags/configuration
  price     Float
  createdAt DateTime @default(now())

  companies Company[]
}

model User {
  id        String   @id @default(uuid())
  empId     String   @unique // Employee ID (username) for login
  name      String
  password  String
  email     String? // Personal email
  role      Role
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Lead {
  id        String   @id @default(uuid())
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  name      String
  email     String?
  phone     String?
  status    String   @default("new") // e.g., new, contacted, qualified, lost
  createdBy String? // user id who created the lead
  createdAt DateTime @default(now())
}

model Pipeline {
  id        String   @id @default(uuid())
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  stageName String
  order     Int // for sorting stages
  createdAt DateTime @default(now())
}

model Campaign {
  id        String   @id @default(uuid())
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  name      String
  status    String   @default("draft") // e.g., draft, active, completed
  createdAt DateTime @default(now())
  // You can add more fields like startDate, endDate, budget, etc.
}

enum Role {
  superadmin
  admin
  manager
  agent
}
